<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.giftednote.user.note.service.impl.UserNoteMapper">
	<select id="getMentoNoteList" resultType="hashMap" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		SELECT LAB.* FROM TBL_PREURP_LABS LAB JOIN TBL_PREURP_UR_LAB UR_LAB 
		WHERE LAB.lab_id = UR_LAB.urlab_lab_id 
		AND UR_LAB.urlab_ur_userid = #{ur_userid}
	</select>
	
	<select id="getStudentNoteList" resultType="hashMap" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		SELECT LAB.* FROM TBL_PREURP_LABS LAB JOIN TBL_PREURP_STUDENTS UR_LAB 
		WHERE LAB.lab_id = UR_LAB.std_selected_lab_id 
		AND UR_LAB.std_ur_userid = #{ur_userid}
	</select>
	
	<select id="getMentoListCnt" resultType="int" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		SELECT COUNT(*) FROM TBL_PREURP_LABS LAB JOIN TBL_PREURP_UR_LAB UR_LAB 
		WHERE LAB.lab_id = UR_LAB.urlab_lab_id 
		AND UR_LAB.urlab_ur_userid = #{ur_userid}
	</select>
	
	<select id="getStudentListCnt" resultType="int" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		SELECT COUNT(*) FROM TBL_PREURP_LABS LAB JOIN TBL_PREURP_STUDENTS UR_LAB 
		WHERE LAB.lab_id = UR_LAB.std_selected_lab_id 
		AND UR_LAB.std_ur_userid = #{ur_userid}
	</select>
	
	
	
	<insert id="setNote" parameterType="egovframework.giftednote.user.note.model.UserNoteVo" useGeneratedKeys="true" keyProperty="N_IDX">
		INSERT INTO TBL_NOTE 
		(IDX , IMAGE , TITLE , TOPIC , LEADER , ASSI , INTRO , DEAD , START_TM) 
		VALUES 
		(#{IDX} , #{IMAGE} , #{TITLE} , #{TOPIC} , #{LEADER} , #{ASSI} , #{INTRO} , 'NO' , now())
	</insert>
	
	<update id="NoteComplete" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		UPDATE TBL_NOTE
		SET DEAD = 'COMPLETE' , END_TM = now()
		WHERE N_IDX = #{N_IDX}
	</update>
	
	<insert id="setTeam" parameterType="egovframework.giftednote.user.team.model.UserTeamVo">
		INSERT INTO TBL_TEAM
		(N_IDX , IDX , NAME , SCHOOL_YEAR , SCHOOL_NAME , LEVEL , EMAIL) 
		VALUES 
		(#{N_IDX} , #{IDX} , #{NAME} , #{SCHOOL_YEAR} , #{SCHOOL_NAME} , #{LEVEL} , #{EMAIL})
	</insert>
	
	<select id="getDetail" resultType="hashMap" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT *
		FROM TBL_NOTE_DETAIL 
		WHERE lab_id = #{lab_id}
		AND P_USER_IDX = #{P_USER_IDX}
		<if test="P_IDX != ''">
	    	AND P_IDX = #{P_IDX}
	    </if>
	    <if test="P_IDX == ''">
	    	AND P_IDX = '1'
	    </if>
	</select>
	
	<select id="getDetailCnt" resultType="int" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT count(*)
		FROM TBL_NOTE_DETAIL 
		WHERE lab_id = #{lab_id}
		AND P_USER_IDX = #{P_USER_IDX}
	</select>
	
	<select id="getContent" resultType="hashMap" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT CONTENT
		FROM TBL_NOTE_DETAIL
		WHERE lab_id = #{lab_id} AND P_IDX = #{P_IDX} AND P_USER_IDX = #{P_USER_IDX}
	</select>
	
	<update id="setDetail" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		UPDATE TBL_NOTE_DETAIL
		SET lab_id = #{lab_id} , P_IDX =#{P_IDX} , CONTENT =#{CONTENT} , P_UPDATE_TM = now()
		WHERE lab_id = #{lab_id} AND P_IDX = #{P_IDX} AND P_USER_IDX
	</update>
	
	<insert id="InsertPage" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		INSERT INTO TBL_NOTE_DETAIL
		(lab_id , P_IDX , P_USER_IDX , CONTENT , P_CREATE_TM , P_UPDATE_TM) 
		VALUES 
		(#{lab_id} , #{P_IDX} , #{P_USER_IDX} , #{CONTENT} , now() , now())
	</insert>
	
	<insert id="setFirstPage" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		INSERT INTO TBL_NOTE_DETAIL
		(N_IDX , P_IDX , CONTENT) 
		VALUES 
		(#{N_IDX} , '1' , '')
	</insert>
	
	<select id="getComment" resultType="hashMap" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT *
		FROM TBL_COMMENT
		WHERE N_IDX =#{N_IDX}
	</select>
	
	<insert id="CommentSet" parameterType="egovframework.giftednote.user.comment.model.UserCommentVo">
		INSERT INTO TBL_COMMENT
		(N_IDX , IDX , CONTENT , CREATE_TM , NAME) 
		VALUES 
		(#{N_IDX} , #{IDX} , #{CONTENT} , now() , #{NAME})
	</insert>
	
	<update id="CommentUpdate" parameterType="egovframework.giftednote.user.comment.model.UserCommentVo">
		UPDATE TBL_COMMENT
		SET CONTENT = #{CONTENT}
		WHERE C_IDX = #{C_IDX}
	</update>
	
	<delete id="CommentDelete" parameterType="egovframework.giftednote.user.comment.model.UserCommentVo">
		DELETE FROM TBL_COMMENT
		WHERE C_IDX = #{C_IDX}
	</delete>
	
	
	<select id="getDetailAll" resultType="hashMap" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT * FROM TBL_NOTE_DETAIL WHERE lab_id = #{lab_id} AND P_USER_IDX = #{P_USER_IDX} ;
	</select>
	
	<select id="getNote" resultType="egovframework.giftednote.user.note.model.UserNoteVo" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT * FROM TBL_PREURP_LABS WHERE lab_id = #{lab_id}
	</select>
	
	<select id="getCollCd" resultType="String" parameterType="egovframework.giftednote.user.note_detail.model.UserNoteDetailVo">
		SELECT lab_coll_cd FROM TBL_PREURP_LABS WHERE lab_id = #{lab_id}
	</select>
	
	<select id="getTeamList" resultType="hashMap" parameterType="egovframework.giftednote.user.note.model.UserNoteVo">
		SELECT STUDENTS.* , USERS.ur_id FROM TBL_PREURP_STUDENTS STUDENTS JOIN TBL_PREURP_USERS USERS WHERE STUDENTS.std_ur_userid = USERS.ur_userid AND STUDENTS.std_selected_lab_id = #{lab_id}
	</select>
	
</mapper>